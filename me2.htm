<!DOCTYPE html> 
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<pre>
-------------немного подробнее, (*читать необязательно*)---------
В школе я был самый умный, особенно по математике, быстро умножал в уме,
занимался по доп. учебникам для мат. вузов, ребусы, всякие задачки решал,
была линейка с формулами - я их все сам доказал с нуля, На контрольных все 
6 вариантов решал.. Однажды был случай, в параллельном классе решали
сложную задачу и всем классом доказывали учителю, что она не решаема, и
тут вызвали меня с др. урока, я пришел и решил её, все были в шоке :)
(потом в универе тоже случай был, на практич паре решали всей группой 
задачку из учебника, там ответы в конце, и никак не могли, решили что
ошибка, и тут вышел я и показал как её надо решать, препод был в шоке:)

Рус, англ. и литературу не любил, но под конец выучил все правила и 
все сдал, даже еще другим подсказывал, сочинения писал впечатлительные,
а когда стихи читал с выражением - в классе мертвая тишина была..
Спортом занимался, по лыжам 3 разряд, и нормы ГТО наверно сдам.
счас по многим тестам биологический возраст 20, хотя по паспорту больше.
(продам секрет вечной молодости, недорого :)

В универ я поступал на прикладную математику, но не поступил, поэтому
пошел на закрытую специальность по цифр технике, математики там
было много т.к очень сложные секретные алгоритмы все на ней были.
По тестам на IQ я был третий на потоке, историю, философию итп не учил,
и поэтому на красный диплом не закончил, да и смысла не было,
распределения уже не было, НИИ позакрывали, так бы давно уже академиком 
стал :)

Диплом защитил на 5: Разработка платы с микроконтроллером для IBM PC 
для ввода и обработки сигнала с электрокардиографа, программа в мк на 
ассемблере предварительно обрабатывала сигнал, а на самом 
компьютере программа на Си, читала из порта, выводила на экран в реальном
времени графики и спектр, а экспертная система диагностировала болезни по
разным признакам и накопленному опыту врачей. Комп был слабый 286й,
поэтому пришлось оптимизировать и распределять нагрузку, сейчас конечно
проще с АЦП считать и сделать все на осн. компьютере.

Пока учился, еще работал на кафедре системным программистом, Си изучал,
но в рамках специальности изучали только фортран, бейсик, ассемблер и 
схемотехнику, на фортране я написал программу для проверки курсовых,
которая упрощала работу преподавателя в сотни раз, но впрочем и студенты
могли эту курсовую за 10 мин сделать, а не неделю считать и рисовать.
После универа потом по работе пришлось на vba немного писать в excel и 
1C бух. С++ я немного учил, но не пишу на нем, java проще и лучше. 

Код я пишу без ошибок, на совесть, проверяю на гранич. условия, итд,
иногда вижу косяки в дорогих известных программах/сайтах и удивляюсь 
кого они там набирают на работу, я и то лучше пишу..
Стараюсь писать по простому, чтобы проще потом разбираться другим.

в 2007г из мп4 плеера я решил сделать КПК/планшет)
дизасемблировал прошивку, разобрался, русифицировал, написал тест-
проверил-работает, можно писать программы и запускать с SD карты,
написал среду разработки, свой язык - макроассемблер, но add/mov 
заменены на понятные += и вся арифметика знаковая, компилятор, эмулятор,
дизассемблер на мой новый язык, написал ОС типа MSDOS+Windows, нес-ко 
нужных программ типа FAR, блокнот, словарь-переводчик, будильник итд,
Выложил это в интернет на сайт и любой мог писать для этого плеера 
программы и игры и запускать, такой вот мини-андроид, но намного раньше.
теперь это все есть на любом телефоне/планшете, но тогда не было.
Работает только на этой модели плеера, к остальным не подходит.
Смотреть исходники (http://explay-m3.narod.ru/Old_site.htm)
Обсуждение на форуме (http://explay-m3.narod.ru/gb/21)  (я-Xing) 

Позже написал для него эмулятор синклера, для портфолио и опыта.. 
Почему синклер? Ну это был такой популярный комп среди студентов,
почти игровая приставка и почти IMB PC который стоил тогда как автомобиль.
Эмулятор синклера на ассемблере для дешевого кит. мп4 плеера - это 
высший пилотаж! любитель не сможет, надо много знать и уметь, а вывод 
на экран RGBR это вобще сложно, скорости не хватало, пришлось думать,
придумывать, оптимизировать, и проще эмуль написать, чем игру, а игр там
много вполне приличных и интересных, хотя тут графич возможности круче,
и игры написанные конкретно для этого плеера были бы красочней.
вирт. клавиатура там была, управление джойстиком, переназначение клавиш
на кнопки плеера для каждой игры, играть вполне можно и не тормозило.
Это просто демо для портфолио, что я умею делать сложные вещи. В том
числе и писать операционные системы как Android или iOS. и программировать
на самом низком уровне. 

До 2014г я был любитель программист-самоучка и писал для себя по мелочи,
и бесплатно, но с 2014г решил заняться этим профессионально и зарабатывать
этим деньги фрилансом или найти удаленную работу/бизнес через интернет.
Начинал программировать давно с ассемблера, фортрана, васика, Си, но когда
появился windows и excel/vb6 то перешел на него т.к отладка там быстрее
и графич. интерфейс делать легко и быстро, на Си надо было после каждой 
ошибки компилировать и это медленно, а в vb6/vba это можно делать сразу 
на ходу, на С++ это всё сложнее и синтаксис хуже и формы, дельфи тоже 
хуже и паскаль с begin end и := это совсем не нравилось.
на vb6 if-endif for-next это лучше чем {} который при мелком шрифте от 
() не отличишь и пары искать сложнее и ошибки. Но существенный минус VB
это нет битовых операций, индексы массивов с () , нет встр. ассемблера,
и много чего нет и медленно работает со строками, но все это с помощью
библиотек давно обошли и теперь работать там нормально, проги маленькие,
писать и отлаживать быстро.  По vb прочитал штук 7 книг и курсов и 
умею почти всё. (но язык непопулярный а vb.net я не знаю, и С# лучше)
Но перехожу на java/php хотя они тормозные и на яве есть уязвимость из-за
медленности и логики движка - можно быстро нажать или вызвать одну и ту
же п/п и она сработает дважды! хотя по идее она должна блокировать
повторное вхождение, но из за тормозов и движка нет этого..
И все эти скриптовые языки работают медленно, и надо тащить мегатонный
интерпретатор типа NET4.5 или компилятор для каждой платформы, что тоже
неудобно, но зато быстро писать и приносит прибыль пока что..
Питон наверно внук VB, отлаживать тоже можно на ходу, () скобки тоже
не обязательны, объекты можно просматривать, но нет типов и циклов,
так что тормозной наверно, хотя бесплатный.. 

В 2014-2015гг. Создана библиотека работы с массивами, файлами и строками,
написана арифметика супер-длинных чисел, например факториал 10000!
это 35660 цифр с 2499 нулями на конце. Считает быстро. демо 
<a href="demo1.zip">_тут_</a>

<a name="fast_sql">==============</a>
Движок базы данных: "fast SQL", (но без SQL уязвимости)
т.к родные *.mdb были с фикс. полями, работали медленно и со сбоями,
а в текст. режиме не различали большие и маленькие буквы + проблемы 
с кодировкой на разных ОС. В этой поиск слова намного быстрее обычных 
БД, т.к вместо двоичного поиска по каждой  букве, там первые две
буквы это б1*256+б2 адрес цепочки, а в каждой цепочке - связный список 
окончаний сортированных по частоте использования, их там мало, т.к
первые две буквы в слове это сильная сортировка сразу и в одну операцию
перехода по адресу, а хвосты путем перебора и вероятность найти нужный
минимальная т.к частые вначале. Вся база находится в ОЗУ и поля под
ключ(искомое слово) занимают 2-256 байт+ служебные поля- адрес след.
слова в связном списке, длина слова и 2 поля значения или адреса в
файле данных или другой БД. Этот движок используется для поиска слов
и замены их на пи-коды, перевод или на пи-синонимы, а так это обычная
таблица: ключ-значение, которая есть в любом языке и работает по
принципу двоичного поиска или по хеш - что медленнее в 3-15 раз!
кодировка 1251 и все строки это массив байт, перед выводом можно
преобразовать в юникод или utf-8 при необходимости.
Исходник класса на VB6 <a href="DictDB.cls.zip">_тут_</a>, 
но могу переписать на asm/с++/java/php под заказ.

<a name="sxatie">==============</a>
Разработаны алгоритмы энтропийного сжатия круче чем коды Хоффмана,
это семейство безразмерных чисел типа 7бит+флаг_продолжения+доп_8бит.
это самый простой случай. Если есть куча int32 чисел где много 0-255
и мало 256-65535 то сжатие хорошее и быстрое. Другие варианты - разная
битность и флаги переноса. Пока перебором выбирается лучший, но можно 
много-поточно и отбрасывать сравнительно плохие или по признакам данных 
- плотность, равномерность, дисперсия, итд выбирать нейронной сетью 
оптимальный на основе полученного опыта и машинного обучения.
подробно (http://explay-m3.narod.ru/4-Alg.htm) 

Т.к у меня был тариф 3р/мб, то ходить на сайты с большим объемом
было накладно, я решил сжатием позаниматься и написать примеры демо для 
портфолио (хотя лучше бы машинным обучением занялся, больше толку было)

Современные сайты тянут шрифты, фреймворки из гугла, не оптимизированные
большие картинки png и видео, стили сгенерированые программами, скрипты
аналитики, рекламы, автокликеры, майнеры, вирусы и др. мусор.
Ну видимо считается, что у всех давно широкий халявный интернет и осн.
трафик видео, хотя опера-турбо сжимающая трафик еще популярна кое где..

Разработан новый метод сжатия текстов. Вообще в сжатии текстов достигнут
предел, лучший кодек PMD используется в 7z/RAR, тексты до 1м сжимает
хорошо и быстро, но оч. большие требуют оч. много памяти и мощности,
и если ее не хватает, то распаковывает по 3 часа.
Но у него есть фишка - чем больше одинаковых участков - тем лучше
сжатие. Поэтому готовим текст - буква+точка+пробел+загл_буква->.
буква+пробел+точка+пробел+мал_буква. Это и др. методы дает выигрыш -5%,
и однозначно восстанавливается после распаковки в исх. состояние.
Еще если сжимать рус слова, англ и кит. то англ и кит. сожмутся лучше т.к
физически короче, поэтому заменяем слова по словарю на короткие пи-коды
и чем чаще слово используется, тем короче его пи-код и состоит из
самых популярных символов - это дает еще -5%, восстановление однозначное,
плюс слова с ошибками/опечатками/сокращениями/сленг-заменяется на пи-синонимы
а при декодировании - на правильное слово без ошибок. Также писать новое
предложение с загл_буквы необязательно - оно автоматич. поставится,
а сокращения писать  сокр- вместо сокр. хотя по словарю это можно
тоже учитывать и различать конец предложения правильно.
Также решаются проблемы с ё буквой - при декодировании слова по словарю
с е заменяются на ё, если стоит эта опция.
На этом же принципе построена проверка на ошибки - причем словарь не
такой как в екселе и опере- где 30% слов не знает, типа скайп и аська
а весь сленг, мат, новые слова, итд. Разное написание это тоже не ошибка,
а пи-синонимы: програмист=программист итд. Это все на движке fast SQL.
Сделано много, но доделывать еще больше, пока некогда и это Демо.

Разработан новый формат изображения на смену gif/png.(кроме фото)
на основе кодека PMD + моя предварительная обработка,
аним. гиф - преобр. в растр. рисунок - кадры вертикально,
цветовое и контекстное сжатие, сжатие однородных площадей,
все это дает уменьшение в 4-10 раз и даже лучше гугловского webp.
но браузерами не поддерживается и сжатие медленное (хотя декодирование
мгновенное), поэтому формат никому не нужен, и пока Демо для портфолио.
но для оформления сайтов для сети тор, например, или узким дорогим 
интернетом, наверно все это могло пригодиться. Ближайший аналог-
формат BMF иногда жмет также, но тоже хуже и давно автором заброшен.

Разработан простой архиватор - "минус" (-.exe) в котором больше 50
методов сжатия, но фото, видео, двоичные данные сжимает в целом плохо, 
но в некоторых случаях и на оч. небольших не повторяющихся данных лучше
до 40%. Демо версия (http://explay-m3.narod.ru/Txt.htm)
Всё это частично не доделано, просто примеры кода, алгоритмы для
того чтобы понять как это работает, ну может быть это можно продать,
пишите мне, подумаем.
почитать подробнее <a href="cxatie.htm">_тут_</a>, 


Примеры где исправлял, верстал и писал, показывать неприлично и
заказчики будут не довольны.. Сайт-магазин делал, для сайтов скрипты
писал, подправлял сайты - верстку и дизайн для нес-х сайтов,
Вот <a href="main.htm">на этой странице</a> часть технологий есть 
но умею гораздо больше, и разбираюсь в новом быстро.

На всякий случай прошел тесты js/html/java/php (сертификаты есть)
(https://geekbrains.ru/users/740859)
2017г
</pre>
